services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: supervisord -n
    # command: gunicorn -w 4 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:8000
    container_name: api
    environment:
      PORT: 8000
    ports:
      - '8000:8000'
    restart: 'no'
    networks:
      - external
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: web
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - external
      - internal
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus/volume:/prometheus
    command:
      - --web.enable-lifecycle
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.external-url=/prometheus
      - --web.route-prefix=/
    restart: always
    networks:
      - external
      - internal
  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
    volumes:
      - ./grafana/volume:/var/lib/grafana
    restart: always
    depends_on:
      - prometheus
    networks:
      - external
      - internal
networks:
  internal:
    driver: bridge
    internal: true
  external:
    driver: bridge
